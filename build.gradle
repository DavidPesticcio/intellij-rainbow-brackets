buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id 'org.jetbrains.intellij' version "0.2.17"
}

allprojects {

    apply plugin: 'org.jetbrains.intellij'

    intellij {
        pluginName name

        version ideaVersion
        downloadSources Boolean.valueOf(downloadIdeaSources)
        updateSinceUntilBuild = false

        sandboxDirectory project.rootDir.canonicalPath + "/.sandbox"

        def publishPassword = "$System.env.publishPassword"

        publishPlugin {
            username publishUsername
            password publishPassword
            channels publishChannels
        }
    }

    apply plugin: 'java'
    apply plugin: 'kotlin'

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

    test {
        testLogging {
            events "passed", "skipped", "failed"
            exceptionFormat = 'full'
        }
    }


    repositories {
        mavenCentral()
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        compile "org.jetbrains.kotlin:kotlin-runtime:$kotlinVersion"
    }
}

apply plugin: 'idea'

idea {
    project {
        jdkName = javaVersion
        languageLevel = javaVersion
    }
}

task publish() {
    if (file("./publish.gradle").exists()) {
        publishPlugin.execute()
    } else {
        buildPlugin.execute()
    }
}

version = version
